"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"What is Persyst, and why should I care?","href":"/persyst-docs/","docId":"intro"},{"type":"category","label":"Getting started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fundamentals of serialization","href":"/persyst-docs/Getting started/Fundamentals_of_serialization","docId":"Getting started/Fundamentals_of_serialization"},{"type":"link","label":"Installation","href":"/persyst-docs/Getting started/Installation","docId":"Getting started/Installation"},{"type":"link","label":"Scene Setup","href":"/persyst-docs/Getting started/Scene_setup","docId":"Getting started/Scene_setup"},{"type":"link","label":"Script annotation","href":"/persyst-docs/Getting started/Script_annotation","docId":"Getting started/Script_annotation"},{"type":"link","label":"What can be serialized?","href":"/persyst-docs/Getting started/Serializable_data","docId":"Getting started/Serializable_data"},{"type":"link","label":"Serializing references","href":"/persyst-docs/Getting started/serializing_references","docId":"Getting started/serializing_references"}],"href":"/persyst-docs/category/getting-started"},{"type":"category","label":"I want to know more!","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Collections","href":"/persyst-docs/Know_more/Collections","docId":"Know_more/Collections"},{"type":"link","label":"Nesting classes","href":"/persyst-docs/Know_more/Nesting_classes","docId":"Know_more/Nesting_classes"},{"type":"link","label":"Referencing everything","href":"/persyst-docs/Know_more/Referencing_everything","docId":"Know_more/Referencing_everything"},{"type":"link","label":"Using reflection","href":"/persyst-docs/Know_more/Abusing_reflection","docId":"Know_more/Abusing_reflection"},{"type":"link","label":"The Pending References System","href":"/persyst-docs/Know_more/Pending_references","docId":"Know_more/Pending_references"}],"href":"/persyst-docs/category/i-want-to-know-more"}]},"docs":{"Getting started/Fundamentals_of_serialization":{"id":"Getting started/Fundamentals_of_serialization","title":"Fundamentals of serialization","description":"A quick overview of the topic of serializing C# objects, on a purely conceptual level. You are likely familiar with most this already. If you just want to get to the tutorials, feel free to skip this section.","sidebar":"tutorialSidebar"},"Getting started/Installation":{"id":"Getting started/Installation","title":"Installation","description":"How to install?","sidebar":"tutorialSidebar"},"Getting started/Scene_setup":{"id":"Getting started/Scene_setup","title":"Scene Setup","description":"Components that you need to get the ball... saving.","sidebar":"tutorialSidebar"},"Getting started/Script_annotation":{"id":"Getting started/Script_annotation","title":"Script annotation","description":"Mostly, using Persyst consists on annotating scripts to tell the PersistentObject what to serialize. This comes in two forms: the ISaveable interface, and the [SaveThis] attribute. Both of them live in the namespace Persyst.","sidebar":"tutorialSidebar"},"Getting started/Serializable_data":{"id":"Getting started/Serializable_data","title":"What can be serialized?","description":"We will now talk about the types of data that can be serialized with Persyst, and whether they are serialized as values or references.","sidebar":"tutorialSidebar"},"Getting started/serializing_references":{"id":"Getting started/serializing_references","title":"Serializing references","description":"Beyond the same basics that apply to serializing everything else, there are some extra rules when serializing references.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"What is Persyst, and why should I care?","description":"Persyst (portmanteau of Persistence System) is a plugin that allows you to easily implement persistence in your Unity applications. While Unity has a fully functional serialization system for changes made in the editor, there is no out-of-the-box support for serializing changes that you make during play mode or in builds.","sidebar":"tutorialSidebar"},"Know_more/Abusing_reflection":{"id":"Know_more/Abusing_reflection","title":"Using reflection","description":"Abusing reflection","sidebar":"tutorialSidebar"},"Know_more/Collections":{"id":"Know_more/Collections","title":"Collections","description":"You can serialize collections, but there are some caveats.","sidebar":"tutorialSidebar"},"Know_more/Nesting_classes":{"id":"Know_more/Nesting_classes","title":"Nesting classes","description":"","sidebar":"tutorialSidebar"},"Know_more/Pending_references":{"id":"Know_more/Pending_references","title":"The Pending References System","description":"","sidebar":"tutorialSidebar"},"Know_more/Referencing_everything":{"id":"Know_more/Referencing_everything","title":"Referencing everything","description":"","sidebar":"tutorialSidebar"}}}')}}]);